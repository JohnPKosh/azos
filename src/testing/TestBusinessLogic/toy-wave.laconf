app
{
       log-root=$(~AZOS_TEST_ROOT)\
       log-csv="Azos.Log.Destinations.CSVFileDestination, Azos"
       debug-default-action="Log,Throw"

    starters
    {
      starter
      {
        name='Payment Processing'
        type='Azos.Web.Pay.PaySystemStarter, Azos.Web'
        application-start-break-on-exception='true'
      }
    }


 web-settings
 {
    social
    {
        provider
        {
          type="Azos.Web.Social.Facebook, Azos.Web"
          app-id="410577972401564"
          client-secret="ffd9140afcd6b1e743e7affa9613d7f4"
        }

        provider
        {
          type="Azos.Web.Social.Twitter, Azos.Web"
          client-code="7wzQlicXz5sdM5ScrxSrNg"
          client-secret="OEb6gMSFwMBLew2BhHp3y6FgK4vxfoQmJBYG2Exb4E"
        }
    }

    web-dav {}

 }


  log
  {
    name="LogSvc"

    destination
    {
     type=$(/$log-csv)
     name="WaveTestSite Log"
     path=$(/$log-root)
     file-name="{0:yyyyMMdd}-$($name).csv.log"
     generate-failover-msg=false
    }
  }

  object-store { name="Main Object Store"
                 guid="A2E59DBB-27AE-4803-A19E-72C99DD8956E"
                 object-life-span-ms="180000"
                 bucket-count="1024"


    provider
    {
              name="Disk Object Store Provider"
              type="Azos.ApplicationModel.Volatile.FileObjectStoreProvider"
              load-limit="0"
              root-path=$(/$log-root)
    }

  }


  /*instrumentation
  {
      name="Instruments" interval-ms="2000"
      provider
      {
         name="Telemetry Instrumentation Provider"
         type="Azos.Instrumentation.Telemetry.TelemetryInstrumentationProvider"
         use-log="false"
         receiver-node="sync://127.0.0.1:8300"
      }
  }*/

  glue
  {
    bindings
    {
      binding { name="sync" type="Azos.Glue.Native.SyncBinding" }
    }
  }//glue


  payment-processing
  {
    pay-system
    {
      name="Stripe1"
      type="Azos.Web.Pay.Stripe.StripeSystem, Azos.Web"
      auto-start=true

      default-session-connect-params
      {
        type="Azos.Web.Pay.Stripe.StripeConnectionParameters, Azos.Web"
        secret-key='akauji-kopopajauadgdyqgydgd'
        email="stripe_user@mail.com"
      }
    }

    pay-system
    {
      name="Mock"
      type="Azos.Web.Pay.Mock.MockSystem, Azos.Web"
      auto-start=true

      default-session-connect-params
      {
        type="Azos.Web.Pay.Mock.MockConnectionParameters, Azos.Web"
        email="mock_user@mail.com"
        cards
        {
          card { number=4242424242424242 exp-year=2017 exp-month=10 cvc=123 }
        }
      }
    }

  }

/*
  geo-lookup
  {
    data-path=$(~AZOS_GEODATA)
    resolution="city"
  }
*/
  wave
  {
    server
    {
       // name="Main Test Server"
  //parallel-works=1282048
  //parallel-accepts=128024
  //kernel-http-queue-limit=512000

        environment-name="PROD"
        instrumentation-enabled=true

        prefix{ name="http://+:8080/" }

        default-error-handler
        {
            show-dump { match{name=all} }
            //log {  match{name=all} }
        }

        gate
        {
            //type="may inject type"
            name="Default Gate"
            enabled = true

            incoming
            {
                default-action=allow

                rule{name="sessionFlood" order=0 action=deny from-expression="$newSession>3"}


                rule{name="all_for_dima"  order=1 action=allow from-addrs="170.12.14.12;170.12.14.13"}
                rule{name="Suspicious"    order=2 action=deny  from-addrs="170.2.1.*"}
                rule{name="CC hackers"    order=3 action=deny  from-addrs="170.4.*" from-groups="CCAtackers;Greedy"}
              //  rule{name="Session flood" order=4 action=deny  from-expression="$session<=(?$a<10,$a,12)"}

                group
                {
                  name="CCAttackers"
                  address{name="Denis Donezk" patterns="170.12.*"}
                  address{name="Denis Deutschland" patterns="3.118.*.12"}
                }

                var-def{name="newSession" decay-by="1" interval-sec="20"}
                var-def{name="cc-recharge" decay-by="1" interval-sec="600"}
            }
        }

        dispatcher
        {
           // type="Azos.Wave.MultithreadedDispatcher"

// filter
// {
 // name="Log All" order=0 type="Azos.Wave.Filters.LoggingFilter, Azos.Wave"
 // before
 // {
    // match
    // {
      // path="{*PAZZ}"
      // var{name="type" default="TraceD"}
    // }
 // }
//}

            handler
            {
              name="Push SSE"
              order=0
              type="WaveTestSite.Handlers.PushHandler, BusinessLogic"
              match{path="push" }
            }


            // handler
            // {
                // name="H"
                // order=0
                // type="WaveTestSite.Handlers.SimpleHandler, BusinessLogic"
                // match{ }
            // }

            filter
            {
              name="Errors" order=0 type="Azos.Wave.Filters.ErrorFilter, Azos.Wave"
              show-dump
              {
                match{name="localhost" order=1 is-local=true }
              }

             // security-redirect-url="http://lenta.ru"
             // custom-error-page-type="WaveTestSite.Pages.AboutUs, BusinessLogic"

               log
               {
                 //match{name="all" var{name="aaa" default="1223"} }
                 //match{name="allButSecurity" type="Azos.Wave.NotAuthorizationExceptionMatch, Azos.Wave"}
                 match
                 {
                   name="composite"
                   type="Azos.Wave.CompositeWorkMatch, Azos.Wave"
                   and
                   {
                     match{name="butSecurity" type="Azos.Wave.NotAuthorizationExceptionMatch, Azos.Wave"}
                   //  match{name="but404" type="Azos.Wave.HttpResponseStatusCodeMatch, Azos.Wave" code=404 is-not=true}
                   }
                   or{}
                 }
               }//log
            }

            |*
            filter
            {
              name="BlockNonDevs" order=1 type="Azos.Wave.Filters.RedirectFilter, Azos.Wave"
              match
              {
                not-path="/mvc/tester/zekret"
                absent-cookies="ZEKRET=Hello"
                var{name="redirect-url" default="/mvc/tester/zekret"}
              }
            }
            *|


            filter
            {
              name="sessions" order=2 type="Azos.Wave.Filters.SessionFilter, Azos.Wave"
             //session-timeout-ms="60000"
             // session-cookie-name="GANBA-BILLY-GATSY"
            }


            filter
            {
              name="Old Redirects" order=3 type="Azos.Wave.Filters.RedirectFilter, Azos.Wave"
              match{ path="old/w.html" var{name="redirect-url" default="/pages/Welcome"} }
              match{ path="old/au.html" var{name="redirect-url" default="/pages/AboutUs"} }
            }


            handler
            {
                name="Mvc Testing"
                order=0
                type="Azos.Wave.Handlers.MVCHandler, Azos.Wave"

                type-location { name="local" assembly="BusinessLogic.dll" ns{ name="WaveTestSite.Controllers"} }

                match{ path="mvc/{type}/{mvc-action}" var{query-name="*"} }
            }

            handler
            {
                name="Dumper"
                order=1
                type="Azos.Wave.Handlers.ContextDumpHandler, Azos.Wave"

                match
                {
                    name="Dump Status"
                    order=2
                    path="dump"
                }
            }

            handler
            {
                name="Embedded Site"
                order=2
                type="WaveTestSite.Embedded.EmbeddedTestSiteHandler, BusinessLogic"
                match{ path="embed/{*path}" }
            }

            handler
            {
                name="Pages"
                order=3
                type="Azos.Wave.Handlers.TemplateHandler, Azos.Wave"
                //default-type="Welcome"
                //cloak-type=$($default-type)
                not-found-redirect-url="/pages/Welcome"
                match{ path="pages/{*type}"}
                type-location { name="local" assembly="BusinessLogic.dll" ns{ name="WaveTestSite.Pages"} }

                filter
                {
                    name="geoLocation"
                    type="Azos.Wave.Filters.GeoLookupFilter, Azos.Wave"
                }

            }

            handler
            {
                name="Stock Content Embedded Site"
                order=4
                type="Azos.Wave.Handlers.StockContentSiteHandler, Azos.Wave"
                match{ path="stock/{*path}"}
            }

            handler
            {

                filter
                {
                 name="Security" order=0 type="Azos.Wave.Filters.SecurityFilter, Azos.Wave"
                 permissions
                   {
                        permission
                        {
                         type="Azos.Security.AdHocPermission, Azos"
                         arg0="SpecialPermissions/Cooking"
                         arg1="BBQOperator"
                         arg2=7
                        }
                   }
                }


                filter
                {
                 name="Stopper" order=1 type="Azos.Wave.Filters.StopFilter, Azos.Wave"
                 before
                 {
                    match
                    {
                      name="all"
                      var{query-name="who" match-contains="lenin" match-case-sensitive=false}
                      var{name="error" default="Lenin was stopped!"}
                    }
                 }
                }

                filter
                {
                 name="Logger" order=3 type="Azos.Wave.Filters.LoggingFilter, Azos.Wave"
                 before
                 {
                    match
                    {
                      var{name="type" default="Trace"}
                      var{name="CODZ" default="10003"}
                    }

                 }
                 after
                 {
                    match
                    {
                      var{name="type" default="Trace"}
                      var{name="CODZ" default="100018"}
                       permissions
                       {
                            permission //only those who have this permission will be logged
                            {
                             type="Azos.Security.AdHocPermission, Azos"
                             arg0="CanLogAfter"
                             arg1="SpecialPermissions"
                             arg2=3
                            }
                       }
                    }

                 }
                }

                name="Downloader"
                order=5
                type="Azos.Wave.Handlers.FileDownloadHandler, Azos.Wave"
                throw=true

                root-path=$"c:\users\anton\desktop"

                //cache-control { max-age-sec=10 }

                match
                {
                    name="Files"
                    order=1
                    path="download/{*filePath}"
                    var{name="attachment" query-name="a" default="false" }
                    var{name="chunked" query-name="c" default="true" }
                }

                match
                {
                    name="Files2"
                    order=2
                    path="z/{*filePath}"
                    var{name="attachment" query-name="a" default="false" }
                    var{name="chunked" query-name="c" default="true" }
                }
            }//handler


            handler
            {
                name="Catch All"
                order=6
                type="Azos.Wave.Handlers.NOPHandler, Azos.Wave"
                match{ }

                filter
                {
                  name="Default" type="Azos.Wave.Filters.RedirectFilter, Azos.Wave"
                  match{ var{name="redirect-url" default="/pages/Welcome"} }
                }
            }


        }//dispatcher
    }//server
  }//wave



  security
  {
    type="Azos.Security.ConfigSecurityManager, Azos"
    users
    {
      user
      {
        name="Dima"
        description="Dima"
        id="dima"
        password='{"algo":"MD5","fam":"Text","hash":"ZcrDK120Iwj08Qqfzvz95w==","salt":"e0K7BA4Ylby2kWAp3nCR3A9jSw=="}'
        status="User"
        rights
        {
          TestPath
          {
            TestPermission
            {
              level=150
            }
          }
        }
      }
    }
  }



}