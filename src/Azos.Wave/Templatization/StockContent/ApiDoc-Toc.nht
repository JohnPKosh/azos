#<laconf>
  compiler
  {
     base-class-name="Azos.Wave.Templatization.StockContent.Master"
     using{ns="Azos.Serialization.JSON"}
     using{ns="Azos.Data"}
     using{ns="System.Linq"}
     namespace="Azos.Wave.Templatization.StockContent"
     abstract="false"
     summary="ApiDoc Index Page"
  }
#</laconf>
#[class]

  public readonly dynamic Data;
  public ApiDoc_Toc(dynamic data) : base()  => Data = data;
  public override string Title { get {return "Api Documentation - Table of Contents"; } }

#[override renderHeader()]
 Api Documentation Contents
#[override renderBody()]

<h1>API Operation Contracts</h1>
This section lists API functionality areas a.k.a. "scopes". Every scope has a list of concrete endpoints specifying operation contracts of the API.
You can navigate individual API scopes below or <a href="./all">view the raw API doc set data.</a>
<div class="clearfix"></div>
@[{
  var cnt = 1;
  foreach(var item in Data.scopes) scope(cnt++, item);
}]
<div class="clearfix"></div>

<h1>API Data Contracts</h1>
This section lists custom data schemas used by the API. Typically custom types represent data contracts used by API operations, such as
resource mutation calls (e.g. on POST/PUT etc.) and data returned to caller (e.g. on GET)
<div class="clearfix"></div>
@[{
  var cnt = 1;
  foreach(var item in Data.types) type(cnt++, item);
}]
<div class="clearfix"></div>


#[scope(int cnt, dynamic scope)]
<h2><a href="scope?id=?[scope.id]"> ?[ "{0:D2}. {1}".Args(cnt, (string)scope.title)]</a></h2>
<strong>?[scope.uri] *</strong>
<p>?[scope.descr]</p>
@[
  var endpoints = scope.endpoints as IEnumerable<dynamic>;
  foreach(var ep in endpoints)
   endpoint(scope, ep);
 ]
 <div class="clearfix"></div>

#[endpoint(dynamic scope, dynamic ep)]
<div class="card"">
 <div class="card-title"><a href="scope?id=?[scope.id]#?[ep.id]"> ./?[StrUtils.TakeLastSegment(ep.uri, '/')]</a></div>
 <div class="card-description">?[ep.title]</div>
</div>

#[type(int cnt, dynamic type)]
<div class="card"">
 <div class="card-title"><a href="schema?id=?[type.id]"> ?[type.sku]</a></div>
</div>

