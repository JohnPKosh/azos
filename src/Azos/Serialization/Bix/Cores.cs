/*<FILE_LICENSE>
 * Azos (A to Z Application Operating System) Framework
 * The A to Z Foundation (a.k.a. Azist) licenses this file to you under the MIT license.
 * See the LICENSE file in the project root for more information.
</FILE_LICENSE>*/

using Azos.Data;

namespace Azos.Serialization.Bix
{
  /// <summary>
  /// Designates classes which implement Serialization and Deserialization core for specific types
  /// These classes are generated by CLI Bix compiler
  /// </summary>
  public abstract class BixCore
  {
    /// <summary> Returns the target type which this BixCore implementation handles </summary>
    public abstract TargetedType TargetedType{ get; }
  }

  /// <summary>
  /// Designates classes which implement Serialization and Deserialization core for specific types
  /// Concrete generated class implementations derive from this class
  /// </summary>
  public abstract class BixCore<T> : BixCore where T : TypedDoc
  {
    protected BixCore(string targetName)
    {
      m_TargetedType = new TargetedType(targetName, typeof(T));
    }

    private TargetedType m_TargetedType;

    public sealed override TargetedType TargetedType => m_TargetedType;

    /// <summary>
    /// Serializes typed data document into BixWriter
    /// </summary>
    public abstract void Serialize(T doc, BixWriter writer);

    /// <summary>
    /// Deserializes typed data document from BixWriter
    /// </summary>
    public abstract void Deserialize(T doc, BixReader reader);
  }
}
